name: Deploy to Production

on:
  push:
    branches: [ master ]

env:
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_HOST: db
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Add SSH Host Key
        run: ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: Copy Files to VPS
        run: scp -r $GITHUB_WORKSPACE/* ${{ secrets.SSH_USER }}@${{ secrets.VPS_IP }}:/app/

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
            scp $GITHUB_WORKSPACE/ /app/ # this line is not working
            cd /app
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.prod
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env.prod
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.prod
            ls -la
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d
