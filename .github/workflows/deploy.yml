name: Deploy to Production

on:
  push:
    branches: [ master ]

env:
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_HOST: db
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy files to VPS
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "./"
          target: "/app/"
          rm: true  # Removes existing files in target before copying

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /app
            # Create or overwrite .env.prod with secrets
            echo "SECRET_KEY=$SECRET_KEY" > .env.prod
            echo "DB_NAME=$DB_NAME" >> .env.prod
            echo "DB_USER=$DB_USER" >> .env.prod
            echo "DB_PASSWORD=$DB_PASSWORD" >> .env.prod
            echo "DB_HOST=$DB_HOST" >> .env.prod
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d