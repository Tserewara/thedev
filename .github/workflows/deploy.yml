name: Deploy to Production

on:
  push:
    branches: [ master ]

env:
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_HOST: db
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Download code
        uses: actions/checkout@v4

      - name: Copy code to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "."
          target: "home/${{secrets.SSH_USER}}"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/${{secrets.SSH_USER}}
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.prod
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env.prod
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.prod
            ls -la
            docker compose -f docker-compose.prod.yml build --no-cache
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d
