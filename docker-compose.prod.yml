services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        SECRET_KEY: ${SECRET_KEY}
        DB_PASSWORD: ${DB_PASSWORD}
    command: gunicorn --bind 0.0.0.0:8000 thedev.wsgi:application
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - static_volume:/app/static
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: postgres_prod
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build: ./nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/static
    depends_on:
      - web

volumes:
  postgres_data_prod:
  static_volume: